// MEDIA QUERY MANAGER
/*
0 - 600px:      Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + :      Big desktop

$breakpoint arguement choices:
- phone
- tab-port
- tab-land
- big-desktop

ORDER: Base + typography > general layout + grid > page layout > components

1em = 16px
*/
@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      @content;
    } //600px
  }
  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      @content;
    } //900px
  }
  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      @content;
    } //1200px
  }
  @if $breakpoint == big-desktop {
    @media only screen and (min-width: 112.5em) {
      @content;
    } //1800
  }
}

@mixin boxGlitch($name, $intensity, $width, $height, $top, $left) {
  $steps: $intensity;

  // Ensure the @keyframes are generated at the root level
  @at-root {
    // We need two different ones
    @for $i from 1 through 2 {
      @keyframes #{$name}-anim-#{$i} {
        @for $i from 0 through $steps {
          #{percentage($i*(1/$steps))} {
            clip: rect(
              random($height) + px,
              $width + px,
              random($height) + px,
              0
            );
          }
        }
      }
    }
  }

  > span {
    position: absolute;
    top: $top + px;
    left: $left + px;
    height: 100%;
  }
  > span:nth-child(2),
  > span:nth-child(3) {
    clip: rect(0, 0, 0, 0);
  }
  > span:nth-child(2) {
    left: ($left + 1.5) + px;
    //   box-shadow: 1px 0 blue;
    animation: #{$name}-anim-1 3.5s infinite linear alternate-reverse;
  }
  > span:nth-child(3) {
    left: ($left - 1.5) + px;
    //   box-shadow: 1px 0 red;
    animation: #{$name}-anim-2 3s infinite linear alternate-reverse;
  }
}
